steps:
  # Step 1: Install dependencies
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['ci', '--production', '--legacy-peer-deps']
    id: 'install-deps'

  # Step 2: Run security audit
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['audit', '--audit-level=high']
    id: 'security-audit'
    waitFor: ['install-deps']

  # Step 3: Run tests
  - name: 'node:20-alpine'
    entrypoint: 'npm'
    args: ['test']
    env:
      - 'NODE_OPTIONS=--experimental-vm-modules'
      - 'CI=true'
    id: 'run-tests'
    waitFor: ['install-deps']

  # Step 4: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/nubemsecurity:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/nubemsecurity:latest'
      - '-f'
      - 'Dockerfile.production'
      - '.'
    id: 'build-image'
    waitFor: ['run-tests', 'security-audit']

  # Step 5: Push to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/nubemsecurity'
    id: 'push-image'
    waitFor: ['build-image']

  # Step 6: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'nubemsecurity-app'
      - '--image'
      - 'gcr.io/$PROJECT_ID/nubemsecurity:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--port'
      - '8080'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '100'
      - '--set-env-vars'
      - 'NODE_ENV=production,VECTOR_DB_PROVIDER=memory'
      - '--update-secrets'
      - 'OPENAI_API_KEY=openai-api-key:latest,JWT_SECRET=jwt-secret:latest,JWT_REFRESH_SECRET=jwt-refresh-secret:latest,PINECONE_API_KEY=pinecone-api-key:latest'
    id: 'deploy-app'
    waitFor: ['push-image']

  # Step 7: Run smoke tests
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe nubemsecurity-app --region us-central1 --format 'value(status.url)')
        
        # Test health endpoint
        curl -f "$${SERVICE_URL}/health" || exit 1
        
        # Test main endpoint
        curl -f "$${SERVICE_URL}/" || exit 1
        
        echo "Smoke tests passed!"
    id: 'smoke-tests'
    waitFor: ['deploy-app']

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
timeout: 1200s

# Trigger configuration
# This will be triggered on push to main branch